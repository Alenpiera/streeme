<?php

/**
 * EchonestPropertiesTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EchonestPropertiesTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object EchonestPropertiesTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('EchonestProperties');
  }
  
  /**
   * Add echonest song information to the local database
   *
   * @param song_id int: streeme song primary key
   * @param details arr: key value pairs for echonest song details
   */
  public function setDetails($song_id, $details = array())
  {
    if(strlen($song_id) > 0)
    {
      //remove the current records
      $this->deleteBySongId($song_id);
      
      if(is_array($details) && count($details) > 0 && isset($details['en_song_id']) && strlen($details['en_song_id']) > 0)
      {
        $echonest_properties = new EchonestProperties();
        $echonest_properties->song_id = $song_id;
        foreach(self::$ECHONEST_PARAMS as $parameter)
        {
          $echonest_properties->$parameter = @$details[$parameter];
        }
        $echonest_properties->save();
        $id = $echonest_properties->getId();
        $echonest_properties->free();
      }
    }
  }
  
  /**
   * Delete records by song id
   *
   * @param song_id int: streeme song primary key
   */
  public function deleteBySongId($song_id)
  {
    $q = Doctrine_Query::create()
      ->delete('EchonestProperties ep')
      ->where('ep.song_id = ?', $song_id)
      ->execute();
    return $q;
  }
  
  /**
   * Constants for echonest properties
   *
   * @return arr: allowed parameters
   */
  public static $ECHONEST_PARAMS = array(
    'en_version',
    'en_date_added',
    'en_item_id',
    'en_artist_id',
    'en_song_id',
    'en_foreign_id',
    'en_audio_md5',
    'en_mode',
    'en_time_signature',
    'en_key',
    'en_duration',
    'en_loudness',
    'en_energy',
    'en_tempo',
    'en_danceability',
    'en_song_hotttnesss',
  );
}