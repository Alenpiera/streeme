CREATE TABLE album (id INTEGER PRIMARY KEY AUTOINCREMENT, scan_id INTEGER, name VARCHAR(255) UNIQUE, mtime INTEGER, amazon_flagged INTEGER DEFAULT 0, meta_flagged INTEGER DEFAULT 0, folders_flagged INTEGER DEFAULT 0, has_art INTEGER DEFAULT 0);
CREATE TABLE artist (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255));
CREATE TABLE echonest_properties (id INTEGER PRIMARY KEY AUTOINCREMENT, song_id INTEGER, name VARCHAR(255), value VARCHAR(255));
CREATE TABLE genre (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255));
CREATE TABLE playlist (id INTEGER PRIMARY KEY AUTOINCREMENT, scan_id INTEGER, service_name VARCHAR(255), service_unique_id VARCHAR(255), name VARCHAR(255), mtime INTEGER);
CREATE TABLE playlist_files (id INTEGER PRIMARY KEY AUTOINCREMENT, playlist_id INTEGER DEFAULT 0, filename TEXT, orderfield INTEGER);
CREATE TABLE scan (id INTEGER PRIMARY KEY AUTOINCREMENT, scan_time VARCHAR(255), scan_type VARCHAR(255));
CREATE TABLE song (id INTEGER PRIMARY KEY AUTOINCREMENT, scan_id INTEGER DEFAULT 0, unique_id VARCHAR(255), artist_id INTEGER DEFAULT 0, album_id INTEGER DEFAULT 0, name VARCHAR(255), length VARCHAR(255), accurate_length INTEGER DEFAULT 0, filesize INTEGER DEFAULT 0, bitrate INTEGER DEFAULT 0, yearpublished INTEGER DEFAULT 1969, tracknumber INTEGER DEFAULT 1, label VARCHAR(255), isremix INTEGER DEFAULT 0, mtime INTEGER, atime INTEGER, filename TEXT, comments TEXT);
CREATE TABLE song_genres (id INTEGER PRIMARY KEY AUTOINCREMENT, song_id INTEGER, genre_id INTEGER);
CREATE TABLE sf_guard_group (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) UNIQUE, description VARCHAR(1000), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE sf_guard_group_permission (group_id INTEGER, permission_id INTEGER, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id));
CREATE TABLE sf_guard_permission (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) UNIQUE, description VARCHAR(1000), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE sf_guard_remember_key (id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE sf_guard_user (id INTEGER PRIMARY KEY AUTOINCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active INTEGER DEFAULT '1', is_super_admin INTEGER DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL);
CREATE TABLE sf_guard_user_group (user_id INTEGER, group_id INTEGER, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id));
CREATE TABLE sf_guard_user_permission (user_id INTEGER, permission_id INTEGER, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id));
CREATE INDEX song_index_idx ON echonest_properties (song_id);
CREATE INDEX scan_type_index_idx ON scan (scan_type);
CREATE INDEX unique_id_index_idx ON song (unique_id);
CREATE INDEX tracknumber_index_idx ON song (tracknumber);
CREATE INDEX songyearpublished_index_idx ON song (yearpublished);
CREATE INDEX songname_index_idx ON song (name);
CREATE INDEX songmtime_index_idx ON song (mtime);
CREATE INDEX songlength_index_idx ON song (length);
CREATE INDEX scan_id_idx ON song (scan_id);
CREATE INDEX isremix_index_idx ON song (isremix);
CREATE INDEX artist_index_idx ON song (artist_id);
CREATE INDEX album_index_idx ON song (album_id);
CREATE INDEX song_index_idx ON song_genres (song_id);
CREATE INDEX is_active_idx_idx ON sf_guard_user (is_active);
